# Generated by Django 3.0.8 on 2020-07-26 14:17

import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ConsumerCategoryBucket',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_code', models.CharField(max_length=100)),
                ('category_name', models.CharField(max_length=100)),
                ('category_notes', models.CharField(max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='MaterialBucket',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('material_code', models.CharField(default='-', max_length=50)),
                ('material_name', models.CharField(default='-', max_length=50)),
                ('material_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('material_source', models.CharField(default='-', max_length=100)),
                ('material_ingredient', models.CharField(default='-', max_length=200)),
                ('material_legal_status', models.CharField(default='-', max_length=200)),
                ('expired_durability', models.CharField(choices=[('very short less than day', 'very short lest than day'), ('short less than week', 'short less than week'), ('medium less than 3 month', 'short less than 3 month'), ('long more than 3 month', 'long more than 3 month')], max_length=100)),
                ('durability_notes', models.CharField(max_length=300)),
            ],
        ),
        migrations.CreateModel(
            name='MeasurementBucket',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('measurement_code', models.CharField(max_length=100)),
                ('measurement_notes', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='ProductParentCode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parents_code', models.CharField(max_length=20)),
                ('code_issued_date', models.DateField()),
                ('code_notes', models.CharField(max_length=300)),
            ],
        ),
        migrations.CreateModel(
            name='QCSampleBean',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sample_code', models.CharField(max_length=10)),
                ('sample_date', models.DateField()),
                ('roasting_date', models.DateField()),
                ('cupping_date', models.DateField(default=datetime.date(2020, 7, 26))),
                ('beans_name', models.CharField(max_length=10)),
                ('jenis_kopi', models.CharField(max_length=10)),
                ('variety', models.CharField(max_length=10)),
                ('origin', models.CharField(max_length=10)),
                ('paska_panen', models.CharField(default='-', max_length=20)),
                ('Crop_year', models.DateField()),
                ('vendor_name', models.CharField(max_length=50)),
                ('qc_acceptance', models.BooleanField(default=False)),
                ('moisture_check', models.DecimalField(decimal_places=3, default=0, max_digits=10)),
                ('primary_defect', models.DecimalField(decimal_places=3, default=0, max_digits=10)),
                ('secondary_defect', models.DecimalField(decimal_places=3, default=0, max_digits=10)),
                ('aroma_greenbean', models.CharField(default='-', max_length=100)),
                ('fragrance_score', models.DecimalField(decimal_places=3, default=0, max_digits=10)),
                ('fragrance_intensity', models.CharField(default='-', max_length=100)),
                ('fragrance_notes', models.CharField(default='-', max_length=100)),
                ('flavor_score', models.DecimalField(decimal_places=3, default=0, max_digits=10)),
                ('flavor_intensity', models.CharField(default='-', max_length=100)),
                ('flavor_notes', models.CharField(default='-', max_length=100)),
                ('aftertaste_score', models.DecimalField(decimal_places=3, default=0, max_digits=10)),
                ('aftertaste_notes', models.CharField(default='-', max_length=100)),
                ('acidity_score', models.DecimalField(decimal_places=3, default=0, max_digits=10)),
                ('acidity_intensity', models.CharField(default='-', max_length=100)),
                ('acidity_notes', models.CharField(default='-', max_length=100)),
                ('body_score', models.DecimalField(decimal_places=3, default=0, max_digits=10)),
                ('body_intensity', models.CharField(default='-', max_length=100)),
                ('body_notes', models.CharField(default='-', max_length=100)),
                ('balance_score', models.DecimalField(decimal_places=3, default=0, max_digits=10)),
                ('uniformity_score', models.DecimalField(decimal_places=3, default=0, max_digits=10)),
                ('cleancup_score', models.DecimalField(decimal_places=3, default=0, max_digits=10)),
                ('overal_cup', models.DecimalField(decimal_places=3, default=0, max_digits=10)),
                ('defect', models.CharField(default='-', max_length=100)),
                ('cup_score', models.DecimalField(decimal_places=1, max_digits=3)),
                ('total_score', models.DecimalField(decimal_places=1, max_digits=3)),
                ('usage', models.CharField(choices=[('e', 'espresso'), ('m', 'manual brew'), ('b', 'espresso & manual'), ('n', 'nothing')], default='n', max_length=1)),
                ('recomendation', models.TextField(default='-', max_length=100)),
            ],
            options={
                'verbose_name': 'Coffee Research',
                'verbose_name_plural': 'Coffee Research',
            },
        ),
        migrations.CreateModel(
            name='ProductReceipe',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateField(default=datetime.date(2020, 7, 26))),
                ('product_name', models.CharField(max_length=100)),
                ('product_code', models.CharField(max_length=100)),
                ('issued_by', models.CharField(max_length=100)),
                ('procedure', models.TextField(max_length=3000)),
                ('notes', models.TextField(max_length=3000)),
                ('market_category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='receipe.ConsumerCategoryBucket')),
                ('product_parents', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='receipe.ProductParentCode')),
            ],
        ),
        migrations.CreateModel(
            name='MaterialUseCart',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('material_qty', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('material_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='receipe.MaterialBucket')),
                ('material_uom', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='receipe.MeasurementBucket')),
                ('product_parent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='receipe.ProductReceipe')),
            ],
        ),
    ]
